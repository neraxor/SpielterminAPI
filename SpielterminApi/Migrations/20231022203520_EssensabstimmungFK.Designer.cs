// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpielterminApi.Models;

#nullable disable

namespace SpielterminApi.Migrations
{
    [DbContext(typeof(SpielterminDbContext))]
    [Migration("20231022203520_EssensabstimmungFK")]
    partial class EssensabstimmungFK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpielterminApi.Models.Abendbewertung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AbendbewertungName")
                        .HasColumnType("int");

                    b.Property<int>("Essensbewertung")
                        .HasColumnType("int");

                    b.Property<int>("Gastgeberbewertung")
                        .HasColumnType("int");

                    b.Property<int>("SpielerId")
                        .HasColumnType("int");

                    b.Property<int>("SpielterminId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpielerId");

                    b.HasIndex("SpielterminId");

                    b.ToTable("Abendbewertungen");
                });

            modelBuilder.Entity("SpielterminApi.Models.Essensabstimmung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EssensrichtungId")
                        .HasColumnType("int");

                    b.Property<int>("SpielerId")
                        .HasColumnType("int");

                    b.Property<int>("SpielterminId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EssensrichtungId");

                    b.HasIndex("SpielerId");

                    b.HasIndex("SpielterminId");

                    b.ToTable("Essensabstimmungen");
                });

            modelBuilder.Entity("SpielterminApi.Models.Essensrichtung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Art")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Essensrichtungen");
                });

            modelBuilder.Entity("SpielterminApi.Models.Nachricht", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AbsenderId")
                        .HasColumnType("int");

                    b.Property<string>("NachrichtText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpielgruppeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Uhrzeit")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AbsenderId");

                    b.HasIndex("SpielgruppeId");

                    b.ToTable("Nachrichten");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spielabstimmung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("SpielerId")
                        .HasColumnType("int");

                    b.Property<int>("SpielgruppeId")
                        .HasColumnType("int");

                    b.Property<int>("SpielvorschlagId")
                        .HasColumnType("int");

                    b.Property<bool>("Zustimmung")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("SpielerId");

                    b.HasIndex("SpielgruppeId");

                    b.HasIndex("SpielvorschlagId");

                    b.ToTable("Spielabstimmungen");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spieler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Benutzername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLZ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Straße")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wohnort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Spieler");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spielgruppe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Spielgruppen");
                });

            modelBuilder.Entity("SpielterminApi.Models.SpielgruppeSpieler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("SpielerId")
                        .HasColumnType("int");

                    b.Property<int>("SpielgruppeId")
                        .HasColumnType("int");

                    b.Property<bool>("WarGastgeber")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("SpielerId");

                    b.HasIndex("SpielgruppeId");

                    b.ToTable("SpielgruppeSpieler");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spieltermin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GastgeberId")
                        .HasColumnType("int");

                    b.Property<int>("SpielgruppeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Termin")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SpielgruppeId");

                    b.ToTable("Spieltermine");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spielvorschlag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("SpielerId")
                        .HasColumnType("int");

                    b.Property<int>("SpielterminId")
                        .HasColumnType("int");

                    b.Property<string>("SpielvorschlagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SpielerId");

                    b.ToTable("Spielvorschlaege");
                });

            modelBuilder.Entity("SpielterminApi.Models.Abendbewertung", b =>
                {
                    b.HasOne("SpielterminApi.Models.Spieler", "Spieler")
                        .WithMany()
                        .HasForeignKey("SpielerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spieltermin", "Spieltermin")
                        .WithMany()
                        .HasForeignKey("SpielterminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spieler");

                    b.Navigation("Spieltermin");
                });

            modelBuilder.Entity("SpielterminApi.Models.Essensabstimmung", b =>
                {
                    b.HasOne("SpielterminApi.Models.Essensrichtung", "Essensrichtung")
                        .WithMany()
                        .HasForeignKey("EssensrichtungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spieler", "Spieler")
                        .WithMany()
                        .HasForeignKey("SpielerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spieltermin", "Spieltermin")
                        .WithMany()
                        .HasForeignKey("SpielterminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Essensrichtung");

                    b.Navigation("Spieler");

                    b.Navigation("Spieltermin");
                });

            modelBuilder.Entity("SpielterminApi.Models.Nachricht", b =>
                {
                    b.HasOne("SpielterminApi.Models.Spieler", "Absender")
                        .WithMany()
                        .HasForeignKey("AbsenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spielgruppe", "Spielgruppe")
                        .WithMany()
                        .HasForeignKey("SpielgruppeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Absender");

                    b.Navigation("Spielgruppe");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spielabstimmung", b =>
                {
                    b.HasOne("SpielterminApi.Models.Spieler", "Spieler")
                        .WithMany()
                        .HasForeignKey("SpielerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spielgruppe", "Spielgruppe")
                        .WithMany()
                        .HasForeignKey("SpielgruppeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spielvorschlag", "Spielvorschlag")
                        .WithMany()
                        .HasForeignKey("SpielvorschlagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spieler");

                    b.Navigation("Spielgruppe");

                    b.Navigation("Spielvorschlag");
                });

            modelBuilder.Entity("SpielterminApi.Models.SpielgruppeSpieler", b =>
                {
                    b.HasOne("SpielterminApi.Models.Spieler", "Spieler")
                        .WithMany("SpielgruppeSpieler")
                        .HasForeignKey("SpielerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpielterminApi.Models.Spielgruppe", "Spielgruppe")
                        .WithMany("SpielgruppeSpieler")
                        .HasForeignKey("SpielgruppeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spieler");

                    b.Navigation("Spielgruppe");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spieltermin", b =>
                {
                    b.HasOne("SpielterminApi.Models.Spielgruppe", "Spielgruppe")
                        .WithMany()
                        .HasForeignKey("SpielgruppeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spielgruppe");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spielvorschlag", b =>
                {
                    b.HasOne("SpielterminApi.Models.Spieler", "Spieler")
                        .WithMany()
                        .HasForeignKey("SpielerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spieler");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spieler", b =>
                {
                    b.Navigation("SpielgruppeSpieler");
                });

            modelBuilder.Entity("SpielterminApi.Models.Spielgruppe", b =>
                {
                    b.Navigation("SpielgruppeSpieler");
                });
#pragma warning restore 612, 618
        }
    }
}
